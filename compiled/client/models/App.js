// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.App = (function(_super) {
    __extends(App, _super);

    function App() {
      return App.__super__.constructor.apply(this, arguments);
    }

    App.prototype.initialize = function() {
      var deck;
      this.set('deck', deck = new Deck());
      this.set('playerHand', deck.dealPlayer());
      this.set('dealerHand', deck.dealDealer());
      this.on('busted blackjack', this.gameOver, this);
      return (this.get('playerHand')).on('stand', this.stand, this);
    };

    App.prototype.gameOver = function() {
      console.log('app model gameOver method is called');
      return this.trigger('gameOver');
    };

    App.prototype.redeal = function() {
      if ((this.get('deck')).length > 10) {
        this.set('playerHand', (this.get('deck')).dealPlayer());
        return this.set('dealerHand', (this.get('deck')).dealDealer());
      } else {
        return this.intitialize();
      }
    };

    App.prototype.stand = function() {
      console.log("stand triggered and caught by appmodel");
      debugger;
      (this.get('dealerHand')).models[0].flip();
      while (Math.max.apply(0, (this.get('dealerHand')).scores()) < (this.get('playerHand')).scores()) {
        (this.get('dealerHand')).hit();
      }
      return this.gameOver;
    };

    return App;

  })(Backbone.Model);

}).call(this);

//# sourceMappingURL=App.map
